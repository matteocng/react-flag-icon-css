{
  "name": "react-flag-icon-css",
  "description": "React SVG country flags component",
  "homepage": "https://github.com/matteocng/react-flag-icon-css#readme",
  "version": "1.0.25",
  "main": "./lib",
  "module": "./module",
  "author": {
    "email": "matteocng+npmjs@outlook.com",
    "name": "matteocng",
    "url": "https://github.com/matteocng"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/matteocng/react-flag-icon-css.git"
  },
  "bugs": {
    "url": "https://github.com/matteocng/react-flag-icon-css/issues"
  },
  "keywords": [
    "flag-icon",
    "flag-icon-css",
    "flag-icons",
    "react",
    "react-css-modules"
  ],
  "dependencies": {
    "classnames": "^2.2.6",
    "flag-icon-css": "^3.2.1",
    "prop-types": "^15.6.2"
  },
  "devDependencies": {
    "@babel/cli": "^7.2.3",
    "@babel/core": "^7.2.2",
    "@babel/node": "^7.2.2",
    "@babel/plugin-proposal-export-default-from": "^7.2.0",
    "@babel/plugin-proposal-export-namespace-from": "^7.2.0",
    "@babel/plugin-proposal-object-rest-spread": "^7.2.0",
    "@babel/polyfill": "^7.2.5",
    "@babel/preset-env": "^7.2.3",
    "@babel/preset-flow": "^7.0.0",
    "@babel/preset-react": "^7.0.0",
    "ava": "^1.1.0",
    "babel-eslint": "^10.0.1",
    "babel-plugin-istanbul": "^5.1.0",
    "chalk": "^2.4.2",
    "classnames": "^2.2.6",
    "codecov": "^3.1.0",
    "coveralls": "^3.0.2",
    "cpy-cli": "^2.0.0",
    "cross-env": "^5.2.0",
    "css-modules-require-hook": "^4.2.3",
    "eslint": "^5.12.0",
    "eslint-config-airbnb": "17.1.0",
    "eslint-config-prettier": "^4.0.0",
    "eslint-plugin-ava": "^6.0.0",
    "eslint-plugin-babel": "^5.3.0",
    "eslint-plugin-flowtype": "^3.2.1",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-jsx-a11y": "^6.1.2",
    "eslint-plugin-react": "^7.12.3",
    "esm": "^3.0.84",
    "flag-icon-css": "^3.2.1",
    "flow-bin": "^0.77.0",
    "flow-copy-source": "^2.0.2",
    "mkdirp": "^0.5.1",
    "nyc": "^13.1.0",
    "postcss-at-rules-variables": "^0.1.6",
    "postcss-cli": "^6.1.1",
    "postcss-custom-properties": "7.0.0",
    "postcss-discard-comments": "^4.0.1",
    "postcss-each": "^0.10.0",
    "prettier": "^1.16.1",
    "react": "^16.7.0",
    "react-dom": "^16.7.0",
    "react-test-renderer": "^16.7.0",
    "rimraf": "^2.6.3",
    "stylelint": "^9.9.0",
    "stylelint-config-standard": "^18.2.0"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "lib",
    "module"
  ],
  "scripts": {
    "audit": "npm audit",
    "build": "cross-env BABEL_ENV=build babel src --out-dir ./lib",
    "build:module": "cross-env BABEL_ENV=module babel src --out-dir ./module ",
    "build:module:watch": "cross-env BABEL_ENV=module babel src --watch --out-dir ./module",
    "build:watch": "cross-env BABEL_ENV=build babel src --watch --out-dir ./lib",
    "clean": "rimraf ./lib",
    "clean:module": "rimraf ./module",
    "coverage": "nyc ava report --reporter=text-lcov > .nyc_output/coverage.lcov",
    "coverage:codecov": "codecov",
    "coverage:coveralls": "coveralls < .nyc_output/coverage.lcov",
    "flow": "flow --include-warnings",
    "generate:types": "cross-env BABEL_ENV=build babel-node ./scripts/tasks/generateFlowTypes.js",
    "lint": "npm run lint:js && npm run lint:css",
    "lint:css": "stylelint src/styles/main.css",
    "lint:js": "eslint src .eslintrc.js",
    "lint:js:fix": "eslint src --fix",
    "nsp": "nsp check",
    "postbuild": "npm run styles && flow-copy-source --ignore *__tests__/**/* -v src lib",
    "postbuild:module": "npm run styles && flow-copy-source --ignore *__tests__/**/* -v src module",
    "postcoverage": "npm run coverage:codecov && npm run coverage:coveralls",
    "posttest:ci": "npm run lint && npm run flow && npm run prettier:check",
    "prebuild": "npm run clean && npm run prebuild:common",
    "prebuild:common": "npm run generate:types && npm run flow",
    "prebuild:module": "npm run clean:module && npm run prebuild:common",
    "precoverage": "mkdirp .nyc_output",
    "prepublishOnly": "npm run test:ci && npm run audit && npm run build && npm run build:module",
    "prettier": "cross-env BABEL_ENV=build babel-node ./scripts/tasks/prettier.js write",
    "prettier:check": "cross-env BABEL_ENV=build babel-node ./scripts/tasks/prettier.js",
    "styles": "postcss -o lib/styles/main.css src/styles/main.css && cpy lib/styles/main.css module/styles/",
    "test": "cross-env BABEL_ENV=testing ava",
    "test:ci": "cross-env BABEL_ENV=testing nyc ava",
    "test:update:snapshots": "npm run test -- --update-snapshots",
    "watch:test": "npm run test -- --watch"
  },
  "license": "MIT",
  "ava": {
    "babel": {
      "testOptions": {
        "presets": [
          [
            "module:ava/stage-4",
            {
              "modules": false
            }
          ]
        ]
      }
    },
    "files": [
      "**/*.test.js"
    ],
    "require": [
      "@babel/register",
      "esm",
      "./src/__tests__/index.js"
    ]
  },
  "nyc": {
    "instrument": false,
    "sourceMap": false
  },
  "peerDependencies": {
    "react": "^0.14 || ^15.0 || ^16.0",
    "react-dom": "^0.14 || ^15.0 || ^16.0"
  },
  "postcss": {
    "plugins": {
      "postcss-at-rules-variables": {},
      "postcss-custom-properties": {},
      "postcss-discard-comments": {},
      "postcss-each": {}
    }
  },
  "prettier": {
    "bracketSpacing": true,
    "jsxBracketSameLine": true,
    "parser": "flow",
    "printWidth": 80,
    "semi": false,
    "singleQuote": true,
    "trailingComma": "all"
  },
  "stylelint": {
    "extends": "stylelint-config-standard",
    "rules": {
      "at-rule-no-unknown": [
        true,
        {
          "ignoreAtRules": [
            "each"
          ]
        }
      ]
    }
  }
}
