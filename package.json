{
  "name": "react-flag-icon-css",
  "description": "React SVG country flags component",
  "homepage": "https://github.com/matteocng/react-flag-icon-css#readme",
  "version": "1.0.18",
  "main": "./lib",
  "module": "./module",
  "author": {
    "email": "matteocng+npmjs@outlook.com",
    "name": "matteocng",
    "url": "https://github.com/matteocng"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/matteocng/react-flag-icon-css.git"
  },
  "bugs": {
    "url": "https://github.com/matteocng/react-flag-icon-css/issues"
  },
  "keywords": [
    "flag-icon",
    "flag-icon-css",
    "flag-icons",
    "react",
    "react-css-modules"
  ],
  "dependencies": {
    "classnames": "^2.2.5",
    "flag-icon-css": "^2.8.0",
    "prop-types": "^15.5.8",
    "react-css-modules": "^4.2.0"
  },
  "devDependencies": {
    "ava": "^0.19.0",
    "babel-cli": "^6.24.1",
    "babel-eslint": "^7.2.1",
    "babel-plugin-istanbul": "^4.0.0",
    "babel-plugin-transform-export-extensions": "^6.22.0",
    "babel-plugin-transform-object-rest-spread": "^6.23.0",
    "babel-polyfill": "^6.22.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "chalk": "^1.1.3",
    "classnames": "^2.2.5",
    "codecov": "^2.0.1",
    "coveralls": "^2.11.16",
    "cpy-cli": "^1.0.1",
    "cross-env": "^5.0.0",
    "css-modules-require-hook": "^4.0.6",
    "enzyme": "^2.8.1",
    "eslint": "^3.19.0",
    "eslint-config-airbnb": "^15.0.0",
    "eslint-plugin-ava": "^4.2.0",
    "eslint-plugin-babel": "^4.1.1",
    "eslint-plugin-flowtype": "^2.32.1",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^5.0.3",
    "eslint-plugin-react": "^7.0.1",
    "flag-icon-css": "^2.8.0",
    "flow-bin": "^0.47.0",
    "flow-copy-source": "^1.1.0",
    "jsdom": "^9.12.0",
    "mkdirp": "^0.5.1",
    "nsp": "^2.6.3",
    "nyc": "^11.0.1",
    "postcss-at-rules-variables": "^0.1.0",
    "postcss-cli": "^4.0.0",
    "postcss-custom-properties": "^6.0.0",
    "postcss-discard-comments": "^2.0.4",
    "postcss-each": "^0.10.0",
    "prettier": "^1.3.1",
    "react": "^15.5.3",
    "react-addons-test-utils": "^15.5.0",
    "react-css-modules": "^4.2.0",
    "react-dom": "^15.5.3",
    "react-test-renderer": "^15.5.4",
    "rimraf": "^2.6.1",
    "stylelint": "^7.9.0",
    "stylelint-config-standard": "^16.0.0"
  },
  "engines": {
    "node": ">=4"
  },
  "scripts": {
    "build": "cross-env BABEL_ENV=build babel src --out-dir ./lib",
    "build:module": "cross-env BABEL_ENV=module babel src --out-dir ./module ",
    "build:module:watch": "cross-env BABEL_ENV=module babel src --watch --out-dir ./module",
    "build:watch": "cross-env BABEL_ENV=build babel src --watch --out-dir ./lib",
    "clean": "rimraf ./lib",
    "clean:module": "rimraf ./module",
    "coverage": "nyc ava report --reporter=text-lcov > .nyc_output/coverage.lcov",
    "coverage:codecov": "codecov",
    "coverage:coveralls": "coveralls < .nyc_output/coverage.lcov",
    "flow": "flow; test $? -eq 0 -o $? -eq 2",
    "generate:types": "cross-env BABEL_ENV=build babel-node ./scripts/tasks/generateFlowTypes.js",
    "lint": "npm run lint:js && npm run lint:css",
    "lint:css": "stylelint src/styles/main.css",
    "lint:js": "eslint src static cmrh.conf.js .eslintrc.js",
    "lint:js:fix": "eslint src static cmrh.conf.js --fix",
    "nsp": "nsp check",
    "postbuild": "npm run styles && flow-copy-source --ignore *__tests__/**/* -v src lib",
    "postbuild:module": "npm run styles && flow-copy-source --ignore *__tests__/**/* -v src module",
    "postcoverage": "npm run coverage:codecov && npm run coverage:coveralls",
    "posttest": "npm run lint && npm run flow && npm run prettier:check",
    "prebuild": "npm run clean",
    "prebuild:module": "npm run clean:module",
    "precoverage": "mkdirp .nyc_output",
    "prepublish": "npm run test && npm run nsp && npm run build && npm run build:module",
    "prettier": "cross-env BABEL_ENV=build babel-node ./scripts/tasks/prettier.js write",
    "prettier:check": "cross-env BABEL_ENV=build babel-node ./scripts/tasks/prettier.js",
    "styles": "postcss -o lib/styles/main.css src/styles/main.css && cpy lib/styles/main.css module/styles/",
    "test": "cross-env BABEL_ENV=testing nyc ava"
  },
  "license": "MIT",
  "ava": {
    "babel": "inherit",
    "files": [
      "src/__tests__/FlagIcon.js",
      "src/__tests__/customCodes.js",
      "src/__tests__/types/propTypes.js"
    ]
  },
  "nyc": {
    "instrument": false,
    "require": [
      "babel-polyfill",
      "babel-register",
      "./src/__tests__/index.js"
    ],
    "sourceMap": false
  },
  "peerDependencies": {
    "prop-types": "^15.5.8",
    "react": "^0.14 || ^15.0",
    "react-dom": "^0.14 || ^15.0"
  },
  "postcss": {
    "plugins": {
      "postcss-at-rules-variables": {},
      "postcss-custom-properties": {},
      "postcss-discard-comments": {},
      "postcss-each": {}
    }
  },
  "stylelint": {
    "extends": "stylelint-config-standard",
    "rules": {
      "at-rule-no-unknown": [
        true,
        {
          "ignoreAtRules": [
            "each"
          ]
        }
      ]
    }
  }
}
